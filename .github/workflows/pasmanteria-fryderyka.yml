name: Pasmanteria Fryderyka CI/CD

on:
  push:
    branches: ["main"]
    paths: ["src/**"]
  pull_request:
    branches: ["main"]
    paths: ["src/**"]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: KanarekLife/pasmanteria_fryderyka

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - uses: actions/checkout@v4
            - name: Log in to the Container Registry
              if: github.event_name == 'push'
              uses: docker/login-action@v3.3.0
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.6.1
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6.9.0
              if: github.event_name == 'push'
              with:
                context: ./src
                target: prestashop
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
            - name: Test Docker image build
              id: push
              uses: docker/build-push-action@v6.9.0
              if: github.event_name != 'push'
              with:
                context: ./src
                target: prestashop
                push: false
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              if: github.event_name == 'push'
              with:
                subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true
